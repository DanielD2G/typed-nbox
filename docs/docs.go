// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Norlis Viamonte",
            "url": "http://www.example.com/support",
            "email": "norlis.viamonte@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/auth/token": {
            "post": {
                "description": "authentication token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Token",
                "parameters": [
                    {
                        "description": "Payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_entrypoints_api_auth.TokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token generated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    }
                }
            }
        },
        "/api/box": {
            "get": {
                "description": "all templates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "templates"
                ],
                "summary": "List templates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer | Basic",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/nbox_internal_domain_models.Box"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    }
                }
            },
            "post": {
                "description": "insert or update templates on s3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "templates"
                ],
                "summary": "Upsert templates",
                "parameters": [
                    {
                        "description": "Upsert template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_entrypoints_api_handlers.CommandBox"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer | Basic",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    }
                }
            }
        },
        "/api/box/{service}/{stage}/{template}": {
            "get": {
                "description": "detail",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "templates"
                ],
                "summary": "Retrieve template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "service",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "stage",
                        "name": "stage",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "template name",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer | Basic",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    }
                }
            },
            "head": {
                "description": "Check the existence of the template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "templates"
                ],
                "summary": "Exist template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "service",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "stage",
                        "name": "stage",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "template name",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer | Basic",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "exit": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    }
                }
            }
        },
        "/api/box/{service}/{stage}/{template}/build": {
            "get": {
                "description": "replace vars patterns",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "templates"
                ],
                "summary": "Build template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "service",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "stage",
                        "name": "stage",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "template name",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer | Basic",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    }
                }
            }
        },
        "/api/box/{service}/{stage}/{template}/vars": {
            "get": {
                "description": "show all vars in template",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "templates"
                ],
                "summary": "List vars template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "service",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "stage",
                        "name": "stage",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "template name",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer | Basic",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    }
                }
            }
        },
        "/api/entry": {
            "post": {
                "description": "insert / update vars",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entry"
                ],
                "summary": "Upsert entries",
                "parameters": [
                    {
                        "description": "Upsert template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/nbox_internal_domain_models.Entry"
                            }
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer | Basic",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    }
                }
            }
        },
        "/api/entry/key": {
            "get": {
                "description": "detail",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entry"
                ],
                "summary": "Retrieve key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "key path",
                        "name": "v",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer | Basic",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/nbox_internal_domain_models.Entry"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete keys \u0026 children",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entry"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "key path",
                        "name": "v",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer | Basic",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    }
                }
            }
        },
        "/api/entry/prefix": {
            "get": {
                "description": "list all keys by path",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entry"
                ],
                "summary": "Filter by prefix",
                "parameters": [
                    {
                        "type": "string",
                        "description": "key path",
                        "name": "v",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer | Basic",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/nbox_internal_domain_models.Entry"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    }
                }
            }
        },
        "/api/track/key": {
            "get": {
                "description": "history changes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entry"
                ],
                "summary": "History",
                "parameters": [
                    {
                        "type": "string",
                        "description": "key path",
                        "name": "v",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer | Basic",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/nbox_internal_domain_models.Tracking"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/problem.ProblemDetail"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal_entrypoints_api_auth.TokenRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "internal_entrypoints_api_handlers.CommandBox": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "123"
                },
                "payload": {
                    "$ref": "#/definitions/nbox_internal_domain_models.Box"
                }
            }
        },
        "nbox_internal_domain_models.Box": {
            "type": "object",
            "properties": {
                "service": {
                    "type": "string"
                },
                "stage": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/nbox_internal_domain_models.Stage"
                    }
                }
            }
        },
        "nbox_internal_domain_models.Entry": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "example": "development/service/var-example"
                },
                "secure": {
                    "type": "boolean",
                    "example": false
                },
                "value": {
                    "type": "string",
                    "example": "value 123"
                }
            }
        },
        "nbox_internal_domain_models.Stage": {
            "type": "object",
            "properties": {
                "template": {
                    "$ref": "#/definitions/nbox_internal_domain_models.Template"
                }
            }
        },
        "nbox_internal_domain_models.Template": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "s3 path",
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "nbox_internal_domain_models.Tracking": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "secure": {
                    "type": "boolean"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "problem.ProblemDetail": {
            "type": "object",
            "properties": {
                "detail": {
                    "description": "Detail es una explicación legible y específica de esta ocurrencia del problema.",
                    "type": "string"
                },
                "instance": {
                    "description": "Instance es un URI que identifica la ocurrencia específica del problema.",
                    "type": "string"
                },
                "requestId": {
                    "type": "string"
                },
                "stackTrace": {
                    "type": "string"
                },
                "status": {
                    "description": "Status es el código de estado HTTP reflejado para esta ocurrencia del problema.",
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "title": {
                    "description": "Title es un resumen corto y legible del tipo de problema.\nNo debería cambiar entre distintas ocurrencias del mismo problema.",
                    "type": "string"
                },
                "type": {
                    "description": "Type es un URI que identifica el tipo de problema.\nSe recomienda que provea documentación legible para los desarrolladores.",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "nbox API",
	Description:      "Esta es una API generada automáticamente con Swaggo.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
